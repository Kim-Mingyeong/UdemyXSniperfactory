{"ast":null,"code":"var _jsxFileName = \"/Users/KimDaeHee_off/Documents/[\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175x\\u1109\\u1173\\u1102\\u1161\\u110B\\u1175\\u1111\\u1165\\u1111\\u1162\\u11A8\\u1110\\u1169\\u1105\\u1175] 10\\u110C\\u116E \\u110B\\u116A\\u11AB\\u1109\\u1165\\u11BC-\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173 \\u110F\\u1162\\u11B7\\u1111\\u1173 React/Assn./UdemyXSniperfactory/movie-app/src/components/live-chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // 서버의 URL에 맞게 변경\n\nexport default function LiveChat() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"message\", handleMessage);\n    return () => {\n      socket.off(\"message\", handleMessage);\n    };\n  }, []);\n  const handleMessage = message => {\n    setMessages(prevMessages => [...prevMessages, message]);\n  };\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== \"\") {\n      const currentTime = new Date().toLocaleTimeString();\n      socket.emit(\"message\", {\n        username,\n        content: inputValue,\n        time: currentTime\n      });\n      setInputValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: handleUsernameChange,\n      placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: message.color\n        },\n        children: [message.username, \": \", message.content, \" - \", message.time]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessageSend,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LiveChat, \"3GjZOP7lh1T0LbrIQWMDIIWKWxQ=\");\n_c = LiveChat;\nvar _c;\n$RefreshReg$(_c, \"LiveChat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","LiveChat","_s","username","setUsername","messages","setMessages","inputValue","setInputValue","on","handleMessage","off","message","prevMessages","handleUsernameChange","e","target","value","handleMessageSend","trim","currentTime","Date","toLocaleTimeString","emit","content","time","children","className","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","index","color","onClick","_c","$RefreshReg$"],"sources":["/Users/KimDaeHee_off/Documents/[유데미x스나이퍼팩토리] 10주 완성-프로젝트 캠프 React/Assn./UdemyXSniperfactory/movie-app/src/components/live-chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:3000\"); // 서버의 URL에 맞게 변경\n\nexport default function LiveChat() {\n  const [username, setUsername] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"message\", handleMessage);\n    return () => {\n      socket.off(\"message\", handleMessage);\n    };\n  }, []);\n\n  const handleMessage = (message) => {\n    setMessages((prevMessages) => [...prevMessages, message]);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== \"\") {\n      const currentTime = new Date().toLocaleTimeString();\n      socket.emit(\"message\", {\n        username,\n        content: inputValue,\n        time: currentTime,\n      });\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"title\" style={{ textAlign: \"center\" }}>\n        Live Chat\n      </h1>\n\n      <input\n        type=\"text\"\n        value={username}\n        onChange={handleUsernameChange}\n        placeholder=\"사용자 이름\"\n      />\n\n      <div>\n        {messages.map((message, index) => (\n          <p key={index} style={{ color: message.color }}>\n            {message.username}: {message.content} - {message.time}\n          </p>\n        ))}\n      </div>\n\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button onClick={handleMessageSend}>전송</button>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}